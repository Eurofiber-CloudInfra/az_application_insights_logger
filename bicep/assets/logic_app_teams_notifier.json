{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
        "Compose_Message_Content": {
            "inputs": {
                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                "actions": [
                    {
                        "title": "Pipeline Link",
                        "type": "Action.OpenUrl",
                        "url": "@variables('pipelineDetail')['pipeline_url']"
                    }
                ],
                "body": [
                    {
                        "inlines": [
                            {
                                "color": "warning",
                                "size": "medium",
                                "text": "Active Alert: ",
                                "type": "TextRun",
                                "weight": "bolder"
                            },
                            {
                                "color": "attention",
                                "fontType": "monospace",
                                "size": "large",
                                "text": "@{triggerBody()?['data']?['essentials']?['alertRule']}",
                                "type": "TextRun"
                            }
                        ],
                        "type": "RichTextBlock"
                    },
                    {
                        "inlines": [
                            {
                                "text": "Message: ",
                                "type": "TextRun",
                                "weight": "bolder"
                            },
                            {
                                "fontType": "monospace",
                                "text": "@variables('pipelineDetail')['message']",
                                "type": "TextRun"
                            }
                        ],
                        "type": "RichTextBlock"
                    },
                    {
                        "inlines": [
                            {
                                "text": "Severity: ",
                                "type": "TextRun",
                                "weight": "bolder"
                            },
                            {
                                "fontType": "monospace",
                                "text": "@variables('pipelineDetail')['severity_level']",
                                "type": "TextRun"
                            }
                        ],
                        "type": "RichTextBlock"
                    },
                    {
                        "inlines": [
                            {
                                "text": "Pipeline: ",
                                "type": "TextRun",
                                "weight": "bolder"
                            },
                            {
                                "fontType": "monospace",
                                "text": "@variables('pipelineDetail')['pipeline_name']",
                                "type": "TextRun"
                            }
                        ],
                        "type": "RichTextBlock"
                    },
                    {
                        "inlines": [
                            {
                                "text": "Build: ",
                                "type": "TextRun",
                                "weight": "bolder"
                            },
                            {
                                "fontType": "monospace",
                                "text": "@variables('pipelineDetail')['pipeline_build']",
                                "type": "TextRun"
                            }
                        ],
                        "type": "RichTextBlock"
                    }
                ],
                "type": "AdaptiveCard",
                "version": "1.5"
            },
            "runAfter": {
                "loop-allOf": [
                    "Succeeded"
                ]
            },
            "type": "Compose"
        },
        "Compose_Payload": {
            "inputs": {
                "attachments": [
                    {
                        "content": "@outputs('Compose_Message_Content')",
                        "contentType": "application/vnd.microsoft.card.adaptive",
                        "contentUrl": null
                    }
                ],
                "type": "message"
            },
            "runAfter": {
                "Compose_Message_Content": [
                    "Succeeded"
                ]
            },
            "type": "Compose"
        },
        "HTTP": {
            "inputs": {
                "body": "@outputs('Compose_Payload')",
                "headers": {
                    "Content-Type": "application/json"
                },
                "method": "POST",
                "uri": "${TEAMS_WEBHOOK_URL}"
            },
            "runAfter": {
                "Compose_Payload": [
                    "Succeeded"
                ]
            },
            "type": "Http"
        },
        "loop-allOf": {
            "actions": {
                "Parse_JSON": {
                    "inputs": {
                        "content": "@variables('pipelineDetail')",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "pipeline_build": {
                                    "type": "string"
                                },
                                "pipeline_name": {
                                    "type": "string"
                                },
                                "pipeline_url": {
                                    "type": "string"
                                },
                                "severityLevel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "runAfter": {
                        "loop-dimensions": [
                            "Succeeded"
                        ]
                    },
                    "type": "ParseJson"
                },
                "loop-dimensions": {
                    "actions": {
                        "Compose": {
                            "inputs": "@addProperty(variables('pipelineDetail'), item().name, item().value)",
                            "runAfter": {},
                            "type": "Compose"
                        },
                        "Set_variable": {
                            "inputs": {
                                "name": "pipelineDetail",
                                "value": "@outputs('Compose')"
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable"
                        }
                    },
                    "foreach": "@items('loop-allOf')?['dimensions']",
                    "runAfter": {},
                    "type": "Foreach"
                }
            },
            "foreach": "@triggerBody()?['data']?['alertContext']?['condition']?['allOf']",
            "runAfter": {
                "var-pipelineDetail": [
                    "Succeeded"
                ]
            },
            "type": "Foreach"
        },
        "var-pipelineDetail": {
            "inputs": {
                "variables": [
                    {
                        "name": "pipelineDetail",
                        "type": "Object",
                        "value": {}
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "parameters": {},
    "triggers": {
        "manual": {
            "inputs": {
                "schema": {
                    "properties": {
                        "data": {
                            "properties": {
                                "alertContext": {
                                    "properties": {
                                        "condition": {
                                            "properties": {
                                                "allOf": {
                                                    "items": {
                                                        "properties": {
                                                            "dimensions": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "value"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "failingPeriods": {
                                                                "properties": {
                                                                    "minFailingPeriodsToAlert": {
                                                                        "type": "integer"
                                                                    },
                                                                    "numberOfEvaluationPeriods": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "linkToFilteredSearchResultsAPI": {
                                                                "type": "string"
                                                            },
                                                            "linkToFilteredSearchResultsUI": {
                                                                "type": "string"
                                                            },
                                                            "linkToSearchResultsAPI": {
                                                                "type": "string"
                                                            },
                                                            "linkToSearchResultsUI": {
                                                                "type": "string"
                                                            },
                                                            "metricMeasureColumn": {},
                                                            "metricValue": {
                                                                "type": "integer"
                                                            },
                                                            "operator": {
                                                                "type": "string"
                                                            },
                                                            "searchQuery": {
                                                                "type": "string"
                                                            },
                                                            "targetResourceTypes": {},
                                                            "threshold": {
                                                                "type": "string"
                                                            },
                                                            "timeAggregation": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "searchQuery",
                                                            "metricMeasureColumn",
                                                            "targetResourceTypes",
                                                            "operator",
                                                            "threshold",
                                                            "timeAggregation",
                                                            "dimensions",
                                                            "metricValue",
                                                            "failingPeriods",
                                                            "linkToSearchResultsUI",
                                                            "linkToFilteredSearchResultsUI",
                                                            "linkToSearchResultsAPI",
                                                            "linkToFilteredSearchResultsAPI"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "windowEndTime": {
                                                    "type": "string"
                                                },
                                                "windowSize": {
                                                    "type": "string"
                                                },
                                                "windowStartTime": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "conditionType": {
                                            "type": "string"
                                        },
                                        "properties": {}
                                    },
                                    "type": "object"
                                },
                                "customProperties": {},
                                "essentials": {
                                    "properties": {
                                        "alertContextVersion": {
                                            "type": "string"
                                        },
                                        "alertId": {
                                            "type": "string"
                                        },
                                        "alertRule": {
                                            "type": "string"
                                        },
                                        "alertTargetIDs": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "configurationItems": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "essentialsVersion": {
                                            "type": "string"
                                        },
                                        "firedDateTime": {
                                            "type": "string"
                                        },
                                        "monitorCondition": {
                                            "type": "string"
                                        },
                                        "monitoringService": {
                                            "type": "string"
                                        },
                                        "originAlertId": {
                                            "type": "string"
                                        },
                                        "resolvedDateTime": {
                                            "type": "string"
                                        },
                                        "severity": {
                                            "type": "string"
                                        },
                                        "signalType": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "schemaId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "kind": "Http",
            "type": "Request"
        }
    }
}